import math
import os
import random
import re
import sys


#
# Complete the 'towerBreakers' function below.
#
# The function is expected to return an INTEGER.
# The function accepts following parameters:
#  1. INTEGER n
#  2. INTEGER m
#

def towerBreakers(n, m):
    if m == 1:
        return 2
    towers = [m] * n

    player = True
    while len(towers) > 0:
        towers.pop()
        player = not player
    return 2 if player else 1


if __name__ == '__main__':
    # print(towerBreakers(2, 2))
    #
    # print(towerBreakers(1, 4))

    # print(towerBreakers(100001, 1))

    input = [[100000, 1],
             [100001, 1],
             [374625, 796723],
             [950929, 183477],
             [732159, 779867],
             [598794, 596985],
             [156054, 445934],
             [156030, 99998],
             [58097, 459353],
             [866372, 333784],
             [601251, 142899],
             [708233, 651036],
             [20590, 56425],
             [970129, 722162],
             [832631, 938765],
             [212387, 779],
             [181866, 992436],
             [183446, 617621],
             [304311, 611791],
             [524875, 7068],
             [432043, 23068],
             [291295, 524893],
             [611991, 399952],
             [139526, 46677],
             [292211, 973975],
             [366445, 232824],
             [456173, 90627],
             [785353, 618526],
             [199719, 382549],
             [514351, 983453],
             [592549, 466869],
             [46461, 860135],
             [607682, 680461],
             [170563, 450601],
             [65067, 13268],
             [949100, 942415],
             [965850, 563416],
             [808580, 385504],
             [304683, 15970],
             [97695, 230946],
             [684388, 241080],
             [440252, 683418],
             [122066, 610135],
             [495289, 833383],
             [34397, 173404],
             [909526, 391149],
             [258839, 182278],
             [662672, 755532],
             [311782, 425252],
             [520186, 207989],
             [546834, 567829],
             [184897, 31321],
             [969804, 842475],
             [775308, 449856],
             [939711, 395240],
             [895029, 926868],
             [598035, 727436],
             [922082, 326615],
             [88513, 570573],
             [196028, 520952],
             [45238, 961389],
             [325404, 844725],
             [388765, 747489],
             [271411, 539814],
             [828925, 586884],
             [356834, 965473],
             [280998, 607171],
             [542819, 276062],
             [140956, 296341],
             [802378, 165305],
             [74568, 15640],
             [987110, 423497],
             [772419, 394971],
             [198761, 293555],
             [5524, 14083],
             [815646, 198888],
             [707017, 711503],
             [729172, 790354],
             [771445, 606097],
             [74062, 926510],
             [358547, 651224],
             [115896, 915166],
             [863298, 850231],
             [623439, 449552],
             [330973, 95432],
             [63573, 370902],
             [311053, 668992],
             [325257, 666073],
             [729771, 591431],
             [637702, 274784]]

    out = []
    for inp in input:
        out.append(towerBreakers(inp[0], inp[1]))

    expected = [2,
                2,
                1,
                1,
                1,
                2,
                2,
                2,
                1,
                2,
                1,
                1,
                2,
                1,
                1,
                1,
                2,
                2,
                1,
                1,
                1,
                1,
                1,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                1,
                1,
                2,
                2,
                2,
                1,
                1,
                2,
                2,
                2,
                1,
                1,
                2,
                1,
                2,
                2,
                2,
                2,
                1,
                2,
                2,
                1,
                1,
                1,
                2,
                1,
                2,
                2,
                2,
                1,
                1,
                1,
                2,
                2,
                1,
                2,
                2,
                2,
                2,
                1,
                1,
                2,
                2,
                1,
                2,
                1,
                2,
                1,
                2,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                2]

    for i in range(len(input)):
        if out[i] != expected[i]:
            print(f"{i}, {out[i]}, {expected[i]}")